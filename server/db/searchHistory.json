import { promises as fs } from 'fs';
import path from 'path';
import { v4 as uuidv4 } from 'uuid';

const historyFilePath = path.resolve('server/db/searchHistory.json');

class HistoryService {
  // Read from the searchHistory.json file
  private async read(): Promise<any[]> {
    try {
      const data = await fs.readFile(historyFilePath, 'utf-8');
      return JSON.parse(data);
    } catch (error) {
      console.error('Error reading history file:', error);
      return [];
    }
  }

  // Write to the searchHistory.json file
  private async write(cities: any[]): Promise<void> {
    try {
      await fs.writeFile(historyFilePath, JSON.stringify(cities, null, 2), 'utf-8');
    } catch (error) {
      console.error('Error writing to history file:', error);
    }
  }

  // Get all cities from searchHistory.json
  public async getCities(): Promise<any[]> {
    return await this.read();
  }

  // Add a new city to searchHistory.json
  public async addCity(cityName: string): Promise<void> {
    const cities = await this.read();
    const newCity = {
      id: uuidv4(),  // generate a unique ID for the city
      name: cityName
    };
    cities.push(newCity);
    await this.write(cities);
  }
}

export default new HistoryService();
